type AccountAPI {
	id: ID!
	accountid: String
	externalid: String
	role: String
	sso: Boolean
}

type AccountAPIConnection {
	items: [AccountAPI]
	nextToken: String
}

input CreateAccountAPIInput {
	accountid: String
	externalid: String
	role: String
	sso: Boolean
}

input DeleteAccountAPIInput {
	id: ID!
}

type Mutation {
	createAccountAPI(input: CreateAccountAPIInput!): AccountAPI
	updateAccountAPI(input: UpdateAccountAPIInput!): AccountAPI
	deleteAccountAPI(input: DeleteAccountAPIInput!): AccountAPI
}

type Query {
	getAccountAPI(id: ID!): AccountAPI
	listAccountAPIS(filter: TableAccountAPIFilterInput, limit: Int, nextToken: String): AccountAPIConnection
}

type Subscription {
	onCreateAccountAPI(
		id: ID,
		accountid: String,
		externalid: String,
		role: String,
		sso: Boolean
	): AccountAPI
		@aws_subscribe(mutations: ["createAccountAPI"])
	onUpdateAccountAPI(
		id: ID,
		accountid: String,
		externalid: String,
		role: String,
		sso: Boolean
	): AccountAPI
		@aws_subscribe(mutations: ["updateAccountAPI"])
	onDeleteAccountAPI(
		id: ID,
		accountid: String,
		externalid: String,
		role: String,
		sso: Boolean
	): AccountAPI
		@aws_subscribe(mutations: ["deleteAccountAPI"])
}

input TableAccountAPIFilterInput {
	id: TableIDFilterInput
	accountid: TableStringFilterInput
	externalid: TableStringFilterInput
	role: TableStringFilterInput
	sso: TableBooleanFilterInput
}

input TableBooleanFilterInput {
	ne: Boolean
	eq: Boolean
}

input TableFloatFilterInput {
	ne: Float
	eq: Float
	le: Float
	lt: Float
	ge: Float
	gt: Float
	contains: Float
	notContains: Float
	between: [Float]
}

input TableIDFilterInput {
	ne: ID
	eq: ID
	le: ID
	lt: ID
	ge: ID
	gt: ID
	contains: ID
	notContains: ID
	between: [ID]
	beginsWith: ID
}

input TableIntFilterInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	contains: Int
	notContains: Int
	between: [Int]
}

input TableStringFilterInput {
	ne: String
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
	contains: String
	notContains: String
	between: [String]
	beginsWith: String
}

input UpdateAccountAPIInput {
	id: ID!
	accountid: String
	externalid: String
	role: String
	sso: Boolean
}